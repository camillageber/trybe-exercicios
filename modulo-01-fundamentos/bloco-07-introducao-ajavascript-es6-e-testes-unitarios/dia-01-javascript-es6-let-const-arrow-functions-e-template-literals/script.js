// EXERC√çCIOS 
// PARTE I

// 1. Fa√ßa as modifica√ß√µes necess√°rias na fun√ß√£o para que o seu comportamento respeite o escopo no qual cada vari√°vel foi declarada.
// Modifique a estrutura da fun√ß√£o para que ela seja uma arrow function .
// Modifique as concatena√ß√µes para template literals .
// Copie o c√≥digo abaixo.


// function testingScope(escopo) {
//   if (escopo === true) {
//     var ifScope = 'N√£o devo ser utilizada fora do meu escopo (if)';
//     ifScope = ifScope + ' √≥timo, fui utilizada no escopo !';
//     console.log(ifScope);
//   } else {
//     var elseScope = 'N√£o devo ser utilizada fora meu escopo (else)';
//     console.log(elseScope);
//   }
//   console.log(ifScope + ' o que estou fazendo aqui ? :O'); // Se necess√°rio esta linha pode ser removida.
// }

// testingScope(true);

const testingScope = escopo => {
  if (escopo === true) {
    let ifScope = "N√£o devo ser utilizada fora do meu escopo (if)";
    ifScope = `${ifScope} √≥timo, fui utilizada no escopo !`;
    console.log(ifScope);
  } else {
    let elseScope = "N√£o devo ser utilizada fora meu escopo (else)";
    console.log(elseScope);
  }
}

testingScope(true);

// 2. Copie o c√≥digo abaixo e fa√ßa uma fun√ß√£o que retorne o array oddsAndEvens em ordem crescente.
// Utilize template literals para que a chamada console.log(<seu c√≥digo>oddsAndEvens<seu c√≥digo>); retorne "Os n√∫meros 2,3,4,7,10,13 se encontram ordenados de forma crescente!".
// B√¥nus (opcional): tente fazer o mesmo exerc√≠cio utilizando o m√©todo array.sort() . Spoiler: √â poss√≠vel realizar uma fun√ß√£o que ordene qualquer array de n√∫meros.
// Copie o c√≥digo abaixo.

// const oddsAndEvens = [13, 3, 4, 10, 7, 2];

// // Seu c√≥digo aqui.

// console.log(oddsAndEvens); // ser√° necess√°rio alterar essa linha üòâ

const oddsAndEvens = () => {
  let arrayNum = [13, 3, 4, 10, 7, 2];
  arrayNum[0] = 2;
  arrayNum[1] = 3;
  arrayNum[2] = 4;
  arrayNum[3] = 7;
  arrayNum[4] = 10;
  arrayNum[5] = 13;

  return arrayNum;
}

console.log(`Os n√∫meros ${oddsAndEvens ()} se encontram ordenados de forma crescente!`);

// B√¥nus: 

const arrayNum = [13, 3, 4, 10, 7, 2];

const oddsAndEvens2 = (arrayN) => {
  const arraySort = arrayN.sort((a, b) => a - b); 
  return arraySort;
}

const arrayBonus = oddsAndEvens(arrayNum);
console.log(`Os n√∫meros ${arrayBonus} se encontram ordenados de forma crescente!`);

// PARTE II

// 1. Crie uma fun√ß√£o que receba um n√∫mero e retorne seu fatorial.
// Na matem√°tica, o fatorial de um n√∫mero n√£o negativo N , com a nota√ß√£o N! , √© o produto de todos os inteiros menores ou iguais a N . Exemplo: 4! = 4 * 3 * 2 * 1 = 24.

const factorial = number => {
  let result = 1;

  for (let index = 2; index <= number; index += 1) {
      result *= index;
  }

  return result;
}

console.log(factorial(5));

// 2. Crie uma fun√ß√£o que receba uma frase e retorne qual a maior palavra.

// Exemplo: 
// longestWord('Ant√¥nio foi no banheiro e n√£o sabemos o que aconteceu') // retorna 'aconteceu'

const longestWord = text => {
  let wordArray = text.split(' ');
  let maxLength = 0;
  let result = '';

  for (const word of wordArray) {
      if (word.length > maxLength) {
          maxLength = word.length;
          result = word;
      }
  }

  return result;
}

console.log(longestWord("Antonio foi no banheiro e n√£o sabemos o que aconteceu"));